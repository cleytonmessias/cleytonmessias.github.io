<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Pieces of Code]]></title>
  <link href="http://blog.piecesofcode.co/atom.xml" rel="self"/>
  <link href="http://blog.piecesofcode.co/"/>
  <updated>2014-04-12T13:03:59-03:00</updated>
  <id>http://blog.piecesofcode.co/</id>
  <author>
    <name><![CDATA[Cleyton Messias]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Rails Console Not Opening in MacOS]]></title>
    <link href="http://blog.piecesofcode.co/2014/04/12/rails-console-not-opening-in-macos/"/>
    <updated>2014-04-12T12:21:12-03:00</updated>
    <id>http://blog.piecesofcode.co/2014/04/12/rails-console-not-opening-in-macos</id>
    <content type="html"><![CDATA[<p>This week, I had a problem when I reinstalled my Ruby version.</p>

<p>When I went to terminal and type <code>rails console c</code>, it was not working presenting this error message:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>.rvm/rubies/ruby-2.0.0-p247/lib/ruby/2.0.0/irb/completion.rb:9:in `require': cannot load such file -- readline (LoadError)</span></code></pre></td></tr></table></div></figure>


<p>After some googling and asking it about in <a href="http://stackoverflow.com/questions/22995981/rails-console-is-not-working-rails-c">StackOverflow</a>, a user give a hint: <em>&ldquo;You didn&rsquo;t compile Ruby with readline support.&rdquo;</em></p>

<p>Then, I found this <a href="https://github.com/guard/guard/wiki/Add-Readline-support-to-Ruby-on-Mac-OS-X">link</a> that teachs 3 ways to do and this worked for me:</p>

<ul>
<li>Go to terminal</li>
<li>brew install readline</li>
<li>Open the file <code>~/.rvm/user/db</code> and add the line: <code>ruby_configure_flags=--with-readline-dir=/usr/local/opt/readline</code></li>
<li>rvm reinstall 2.0.0-p247</li>
</ul>


<p>Now, when I go to terminal and type <code>rails console c</code>, it&rsquo;s working again :)</p>

<p>Hope it helps someone :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Representable Gem to Parse Nested Results]]></title>
    <link href="http://blog.piecesofcode.co/2014/04/10/representable-gem-to-parse-nested-results/"/>
    <updated>2014-04-10T18:29:11-03:00</updated>
    <id>http://blog.piecesofcode.co/2014/04/10/representable-gem-to-parse-nested-results</id>
    <content type="html"><![CDATA[<p>Recently, I had to integrate with a SOAP Webservice from Ruby.</p>

<p>Thanks to <a href="http://savonrb.com/version2/">Savon gem</a> this was pretty easy.</p>

<p>To invoke the webservice, I made a simple method:</p>

<figure class='code'><figcaption><span> (savon_request.rb)</span> <a href='http://blog.piecesofcode.co/downloads/code/savon_request.rb'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">def</span> <span class="nf">request</span><span class="p">(</span><span class="nb">method</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>
</span><span class='line'>  <span class="n">client</span> <span class="o">=</span> <span class="ss">Savon</span><span class="p">:</span><span class="ss">:Client</span><span class="o">.</span><span class="n">new</span><span class="p">(</span><span class="n">basic_auth</span><span class="p">:</span> <span class="n">auth</span><span class="p">,</span> <span class="ss">wsdl</span><span class="p">:</span> <span class="n">wsdl</span><span class="p">)</span>
</span><span class='line'>  <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="n">call</span><span class="p">(</span><span class="nb">method</span><span class="p">,</span> <span class="ss">message</span><span class="p">:</span> <span class="n">message</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="kp">private</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">auth</span>
</span><span class='line'>  <span class="o">[</span><span class="n">options</span><span class="o">[</span><span class="ss">:ws_user</span><span class="o">]</span><span class="p">,</span> <span class="n">options</span><span class="o">[</span><span class="ss">:ws_password</span><span class="o">]</span> <span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="k">def</span> <span class="nf">wsdl</span>
</span><span class='line'>  <span class="n">options</span><span class="o">[</span><span class="ss">:wsdl_endpoint</span><span class="o">]</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="o">.</span><span class="n">.</span><span class="o">.</span>
</span></code></pre></td></tr></table></div></figure>


<p>Savon already gives us a hash response, making easier to deal it.</p>

<p>Usually soap responses are pretty nested, so I use representable with goal of only map it.</p>

<p>I added the <a href="https://github.com/apotonick/representable">representable gem</a> and create a (in my scenario) a client response:</p>

<figure class='code'><figcaption><span> (client_representer.rb)</span> <a href='http://blog.piecesofcode.co/downloads/code/client_representer.rb'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">module</span> <span class="nn">ClientRepresenter</span>
</span><span class='line'>  <span class="kp">include</span> <span class="ss">Representable</span><span class="p">:</span><span class="ss">:JSON</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">nested</span> <span class="ss">:client_get_response</span> <span class="k">do</span>
</span><span class='line'>    <span class="n">nested</span> <span class="ss">:client_get_result</span> <span class="k">do</span>
</span><span class='line'>      <span class="n">property</span> <span class="ss">:email</span>
</span><span class='line'>      <span class="n">property</span> <span class="ss">:name</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>To map for a real class that my application understands, i&rsquo;ve created a Virtus Model and extend the representable.</p>

<p>Virtus model:</p>

<figure class='code'><figcaption><span> (client_virtus.rb)</span> <a href='http://blog.piecesofcode.co/downloads/code/client_virtus.rb'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="k">class</span> <span class="nc">Client</span>
</span><span class='line'>  <span class="kp">include</span> <span class="no">Virtus</span><span class="o">.</span><span class="n">model</span>
</span><span class='line'>
</span><span class='line'>  <span class="n">attribute</span> <span class="ss">:email</span><span class="p">,</span> <span class="nb">String</span>
</span><span class='line'>  <span class="n">attribute</span> <span class="ss">:name</span><span class="p">,</span> <span class="nb">String</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>And to map it:</p>

<figure class='code'><figcaption><span> (service_representable_sample.rb)</span> <a href='http://blog.piecesofcode.co/downloads/code/service_representable_sample.rb'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">response</span> <span class="o">=</span> <span class="n">soap</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="ss">:client_get</span><span class="p">,</span> <span class="n">message</span><span class="p">)</span>
</span><span class='line'>
</span><span class='line'><span class="n">client</span> <span class="o">=</span> <span class="no">Client</span><span class="o">.</span><span class="n">new</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">extend</span><span class="p">(</span><span class="ss">Representers</span><span class="p">:</span><span class="ss">:ClientRepresenter</span><span class="p">)</span>
</span><span class='line'><span class="n">client</span><span class="o">.</span><span class="n">from_hash</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">body</span><span class="o">.</span><span class="n">try</span><span class="p">(</span><span class="ss">:with_indifferent_access</span><span class="p">))</span>
</span><span class='line'>
</span></code></pre></td></tr></table></div></figure>


<p>That&rsquo;s is:</p>

<ul>
<li>I made a request for a SOAP webservice using Savon.</li>
<li>Create a representable to parse the results.</li>
<li>Use a Virtus model that my application can handle.</li>
</ul>


<p>Of course it be made better, so feel free to comment it :)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using VCR With Timecop]]></title>
    <link href="http://blog.piecesofcode.co/2014/04/07/using-vcr-with-timecop/"/>
    <updated>2014-04-07T21:53:34-03:00</updated>
    <id>http://blog.piecesofcode.co/2014/04/07/using-vcr-with-timecop</id>
    <content type="html"><![CDATA[<p>If you already used <a href="https://github.com/vcr/vcr" target="_blank"><code>VCR</code></a> to record requests to unit tests your application, maybe all your tests passed in the day you developed. Then you go to sleep, thinking in another task.</p>

<p>You wake up another day, run all the tests again and boom! All related to VCR are failing and you don&rsquo;t know why.</p>

<p>I run into this problem when I was using <code>VCR</code>  and <a href="https://github.com/travisjeffery/timecop" target="_blank"><code>Timecop</code></a> gems.</p>

<p>I was using <code>Timecop</code> to freeze my requests and the other day, all my related tests was failing.</p>

<p>To fix this, I&rsquo;ve looked and at this <a href="https://github.com/vcr/vcr/issues/266">issue</a> and saw it was solved by exposing the <code>VCR::Cassette#originally_recorded_at</code>.</p>

<p>So, to make my tests passing again:</p>

<figure class='code'><figcaption><span> (timecop_snippet.rb)</span> <a href='http://blog.piecesofcode.co/downloads/code/timecop_snippet.rb'>download</a></figcaption>
<div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='rb'><span class='line'><span class="n">before</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">Timecop</span><span class="o">.</span><span class="n">freeze</span><span class="p">(</span><span class="no">VCR</span><span class="o">.</span><span class="n">current_cassette</span><span class="o">.</span><span class="n">originally_recorded_at</span> <span class="o">||</span> <span class="no">Time</span><span class="o">.</span><span class="n">now</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'>
</span><span class='line'><span class="n">after</span> <span class="k">do</span>
</span><span class='line'>  <span class="no">Timecop</span><span class="o">.</span><span class="n">return</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>In my case, I had trouble because my requests had time dependencies, so, I needed to use the time when the original cassete was recorded. Then I started using <code>Timecop</code> and the tests started to fail the other day.</p>

<p>But quick fixed!</p>

<p>Feel free to give feedback for better solutions :)</p>

<p>Happy coding!</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How I Built My Blog Using Jekyll?]]></title>
    <link href="http://blog.piecesofcode.co/2014/04/06/how-i-built-my-jekyll-blog/"/>
    <updated>2014-04-06T18:23:18-03:00</updated>
    <id>http://blog.piecesofcode.co/2014/04/06/how-i-built-my-jekyll-blog</id>
    <content type="html"><![CDATA[<p>Hi!</p>

<p>Thanks for getting in here!</p>

<p>For the initial post, I&rsquo;m gonna write all the things I&rsquo;m using to build this blog. As many things I intend to write, nothing magical.</p>

<p>Just to start, in my <a href="http://blog.piecesofcode.co/about">about page</a> I explain the reasons why I&rsquo;m writing this blog.</p>

<p>Being a blog focused in software development, I thought it will be cool to use something new for me to learn and post about it. So, I decided to use <a href="http://jekyllrb.com/" target="_blank">Jekyll</a>.</p>

<p>Googling a little more, I found this really cool platform built on top of Jekyll: <a href="http://octopress.org/" target="_blank">Octopress, a blogging framework for hackers</a>. So far, everything that was needed was simple just by following its documentation. As a developer, I&rsquo;m feeling some freedom to customize and use it. Fast and clean!</p>

<p>To do my about page, I&rsquo;ve followed these <a href="http://gangmax.me/blog/2012/05/04/add-about-page-in-octopress/" target="_blank">simple steps</a>.</p>

<p>As a theme for my blog, I&rsquo;m using this <a href="https://github.com/johnkeith/boldandblue" target="_blank">really nice one</a>. If you to know more, see more themes <a href="https://github.com/imathis/octopress/wiki/3rd-Party-Octopress-Themes" target="_blank">here</a>.</p>

<p>I bought this domain at <a href="http://www.godaddy.com">Godaddy</a> and configure it using nice <a href="http://blog.flatironschool.com/post/56900358130/setting-up-a-custom-domain-with-octopress-github">post</a>.</p>

<p>For analytics, I&rsquo;ve created an account at Google Analytics, but to add it, i&rsquo;m using <a href="https://segment.io" target="_blank">Segment.IO</a>. This way, I can add more analytics without increasing my page size.</p>

<p>All of this writing is being made in Sublime Text using the <a href="https://sublime.wbond.net/packages/MarkdownEditing">Markdown plugin</a>.</p>

<p>As I said, I don&rsquo;t want to show complete solutions, but if you use just one of this links, it&rsquo;ll be worth of doing it :)</p>

<p>Here&rsquo;s a print screen of my editor writing this post:</p>

<p><img src="http://blog.piecesofcode.co/images/posts/sublime_markdown.png"></p>

<p>To summarize this post, I&rsquo;ve talked about:</p>

<ul>
<li>A little about me</li>
<li>Jekyll</li>
<li>Octopress</li>
<li>How to create a page in Jekyll</li>
<li>Themes for Octopress</li>
<li>Domain registration</li>
<li>Analytics</li>
<li>Text and editor and plugin to help you</li>
</ul>


<p>If you have any doubts, feel free to contact in the comments below :)</p>
]]></content>
  </entry>
  
</feed>
